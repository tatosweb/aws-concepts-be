{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Monolitico App",
  "Metadata": {},
  "Parameters": {
    "KeyPairName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Archivo para conexion a EC2",
      "ConstraintDescription": "Debe existir previamente un archivo keypair"
    },
    "emailSending": {
      "Type": "String"
    },
    "emailDestination": {
      "Type": "String"
    },
    "userMasterBD": {
      "Type": "String",
      "Description": "Usuario ROOT BD",
      "NoEcho": true,
      "Default" : "root"
    },
    "passwordMasterBD": {
      "Type": "String",
      "Description": "Password ROOT BD",
      "NoEcho": true,
      "Default": "12345678"
    },
    "tipoDeInstancia" : {
      "Type" : "String",
      "Default" : "t2.micro"
    },
    "capacidadDeseadaMonolitico": {
      "Type": "String",
      "Default": "2"
    }
  },
  "Mappings": {
    "AWSRegionToAMI": {
      "us-east-1": {
        "AMIID": "ami-01d025118d8e760db"
      },
      "us-east-2": {
        "AMIID": "ami-026dea5602e368e96"
      }
    }
  },
  "Resources": {
    "monoliticoTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckProtocol": "HTTP",
        "HealthCheckPath": "/status/verificar",
        "HealthCheckTimeoutSeconds": 10,
        "HealthyThresholdCount": 5,
        "Matcher": {
          "HttpCode": "200-204"
        },
        "Name": "tgMonoliticoCF",
        "Port": 8080,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
        {
          "Key": "deregistration_delay.timeout_seconds",
          "Value": "30"
        }
        ],
        "Targets": [],
        "UnhealthyThresholdCount": 5,
        "VpcId": {
          "Fn::ImportValue": "infraestructura-idVPC"
        },
        "Tags": [
        {
          "Key": "Name",
          "Value": "monolitico"
        }
        ]
      }
    },
    "launchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "IamInstanceProfile": { "Ref": "instanceProfileMonolito" },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionToAMI",
            {
              "Ref": "AWS::Region"
            },
            "AMIID"
          ]
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe \n",
                "yum update -y \n",
                "yum install java-1.8.0 -y \n",
                "yum remove java-1.7.0-openjdk -y \n",
                "echo 'export host=",{ "Fn::ImportValue": "basedatos-endpointRDS" },"' >> ~/.bash_profile \n",
                "echo 'export port=3306' >> ~/.bash_profile \n",
                "echo 'export database=\"geoserviciosbd\"' >> ~/.bash_profile \n",
                "echo 'export username=",{"Ref": "userMasterBD"},"' >> ~/.bash_profile \n",
                "echo 'export password=",{"Ref": "passwordMasterBD"},"' >> ~/.bash_profile \n",
                "echo 'export userPoolId=",{ "Fn::ImportValue": "cognito-pool-id" },"' >> ~/.bash_profile \n",
                "echo 'export clientId=",{ "Fn::ImportValue": "cognito-client-angular" },"' >> ~/.bash_profile \n",
                "echo 'export emailSend=",{"Ref": "emailSending"},"' >> ~/.bash_profile \n",
                "echo 'export emailRecep=",{"Ref": "emailDestination"},"' >> ~/.bash_profile \n",
                "echo 'export arnTopicoSNS=",{ "Fn::ImportValue": "share-sns-app" },"' >> ~/.bash_profile \n",
                "echo 'export nameSQS=",{ "Fn::ImportValue": "share-sqs-app" },"' >> ~/.bash_profile \n",
                "echo 'export AWS_SES_REGION=\"us-east-1\"' >> ~/.bash_profile \n",
                "echo 'export AWS_SNS_REGION=",{ "Ref": "AWS::Region" },"' >> ~/.bash_profile \n",
                "echo 'export AWS_COGNITO_REGION=",{ "Ref": "AWS::Region" },"' >> ~/.bash_profile \n",
                "echo 'export AWS_SQS_REGION=",{ "Ref": "AWS::Region" },"' >> ~/.bash_profile \n",
                "source ~/.bash_profile \n",
                "wget https://gitlab.com/w.marchanaranda/aws-presencial/raw/master/app-aws.jar \n",
                "nohup java -Djava.security.egd=file:/dev/./urandom -jar app-aws.jar | tee output.log & "
              ]
            ]
          }
        },
        "SecurityGroups": [
        { "Fn::ImportValue": "infraestructura-sgMonolito" }
        ],
        "InstanceType": { "Ref": "tipoDeInstancia" }
      }
    },
    "autoScalingMonolito": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "VPCZoneIdentifier": [
        {
          "Fn::ImportValue" : "infraestructura-subnetPublica1"
        },
        {
          "Fn::ImportValue" : "infraestructura-subnetPublica2"
        }
        ],
        "LaunchConfigurationName": {
          "Ref": "launchConfiguration"
        },
        "MinSize": "0",
        "DesiredCapacity": { "Ref" : "capacidadDeseadaMonolitico" },
        "MaxSize": "10",
        "TargetGroupARNs": [
        {
          "Ref": "monoliticoTargetGroup"
        }
        ],
        "MetricsCollection": [
        {
          "Granularity": "1Minute",
          "Metrics": [
            "GroupMinSize",
            "GroupMaxSize"
          ]
        }
        ]
      }
    },
    "roleMonolito": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "ec2.amazonaws.com"
              ]
            },
            "Action": [
              "sts:AssumeRole"
            ]
          }
          ]
        },
        "Path": "/"
      }
    },
    "policyMonolito": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "_policyMonolito",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
          {
            "Effect": "Allow",
            "Action": [
              "cognito-idp:AdminInitiateAuth",
              "cognito-idp:ConfirmForgotPassword",
              "cognito-idp:GlobalSignOut",
              "cognito-idp:AdminRespondToAuthChallenge",
              "cognito-idp:InitiateAuth",
              "cognito-idp:AdminGetUser",
              "ses:SendEmail",
              "ses:SendRawEmail",
              "sns:Publish",
              "sqs:DeleteMessage",
              "sqs:GetQueueUrl",
              "sqs:ChangeMessageVisibility",
              "sqs:ReceiveMessage",
              "sqs:SendMessage",
              "sqs:DeleteMessageBatch",
              "sqs:ChangeMessageVisibilityBatch"
            ],
            "Resource": "*"
          }
          ]
        },
        "Roles": [
        {
          "Ref": "roleMonolito"
        }
        ]
      }
    },
    "instanceProfileMonolito": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
        {
          "Ref": "roleMonolito"
        }
        ]
      }
    },
    "monoliticoAlbListenerRule": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
        {
          "Type": "forward",
          "TargetGroupArn": {
            "Ref": "monoliticoTargetGroup"
          }
        }
        ],
        "Conditions": [
        {
          "Field": "path-pattern",
          "Values": [
            "/api/*",
            "/v2/*"
          ]
        }
        ],
        "ListenerArn": { "Fn::ImportValue": "infraestructura-arnListenerHttpMyBalancer" },
        "Priority": 10
      }
    }
  },
  "Outputs": {
    "monoliticoTargetGroup": {
      "Description": "grupo de destino - monolitico",
      "Value": {
        "Ref": "monoliticoTargetGroup"
      }
    }
  }
}